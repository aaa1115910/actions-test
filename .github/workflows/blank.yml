# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    outputs:
      the_job_output1: ${{ steps.jo.outputs.the_job_outputtt1 }}
      the_job_output2: ${{ steps.jo.outputs.the_job_outputtt2 }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
          
      # Runs a set of commands using the runners shell
      - name: Create test files
        id: jo
        run: |
          mkdir -p app/build/outputs/apk/default/alpha
          cd app/build/outputs/apk/default/alpha
          touch test_file_a.bin
          touch test_file_b.bin
          touch test_file_c.bin
          touch test_file_d.bin
          echo aaa > test_file_a.bin
          echo bbb > test_file_b.bin
          echo ccc > test_file_c.bin
          echo ddd > test_file_d.bin
          echo "the_job_outputtt1=233" >> $GITHUB_OUTPUT
          echo "the_job_outputtt2=556" >> $GITHUB_OUTPUT

      - name: archive file a
        uses: actions/upload-artifact@v3
        with:
          name: Archive a
          path: app/build/outputs/apk/default/alpha/test_file_a.bin

      - name: archive file b
        uses: actions/upload-artifact@v3
        with:
          name: Archive b
          path: app/build/outputs/apk/default/alpha/test_file_b.bin

      - name: archive file c
        uses: actions/upload-artifact@v3
        with:
          name: Archive c
          path: app/build/outputs/apk/default/alpha/test_file_c.bin

      - name: archive file d
        uses: actions/upload-artifact@v3
        with:
          name: Archive d
          path: app/build/outputs/apk/default/alpha/test_file_d.bin

  read:
    needs: build
    runs-on: ubuntu-latest
    steps: 

      - name: download archive Archive a
        uses: actions/download-artifact@v3
        with:
            name: Archive a

      - name: download archive Archive b
        uses: actions/download-artifact@v3
        with:
            name: Archive b

      - name: download archive Archive c
        uses: actions/download-artifact@v3
        with:
            name: Archive c

      - name: download archive Archive d
        uses: actions/download-artifact@v3
        with:
            name: Archive d
  
      - name: Display structure of downloaded files
        run: ls -R

      - name: do sth
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 1
          max_attempts: 5
          command: |
            cat test_file_a.bin
            cat test_file_b.bin
            cat test_file_c.bin
            cat test_file_d.bin
                  
      - name: print output 1
        run: |
          echo "${{ needs.build.outputs.the_job_outputtt1 }} ${{ needs.build.outputs.the_job_outputtt2 }}"

      - name: print output 2
        env:
          OUTPUT1: ${{needs.build.outputs.the_job_outputtt1}}
          OUTPUT2: ${{needs.build.outputs.the_job_outputtt2}}
        run: echo "$OUTPUT1 $OUTPUT2"
